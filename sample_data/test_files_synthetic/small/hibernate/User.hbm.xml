<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="com.example.model">
    
    <class name="User" table="users" schema="myapp">
        <comment>User entity mapping</comment>
        
        <id name="id" column="user_id" type="long">
            <generator class="native">
                <param name="sequence">user_seq</param>
            </generator>
        </id>
        
        <version name="version" column="version" type="int"/>
        
        <property name="username" column="username" type="string" 
                  length="50" not-null="true" unique="true"/>
        <property name="email" column="email" type="string" 
                  length="100" not-null="true" unique="true"/>
        <property name="firstName" column="first_name" type="string" 
                  length="50" not-null="false"/>
        <property name="lastName" column="last_name" type="string" 
                  length="50" not-null="false"/>
        <property name="dateOfBirth" column="date_of_birth" type="date"/>
        <property name="createdDate" column="created_date" type="timestamp" 
                  not-null="true"/>
        <property name="lastLoginDate" column="last_login_date" type="timestamp"/>
        <property name="isActive" column="is_active" type="boolean" 
                  not-null="true"/>
        <property name="salary" column="salary" type="big_decimal" 
                  precision="10" scale="2"/>
        
        <!-- One-to-one relationship -->
        <one-to-one name="userProfile" class="UserProfile" 
                    foreign-key="fk_user_profile" cascade="all"/>
        
        <!-- One-to-many relationship -->
        <set name="orders" table="user_orders" cascade="all" 
             fetch="lazy" inverse="true">
            <key column="user_id"/>
            <one-to-many class="Order"/>
        </set>
        
        <!-- Many-to-many relationship -->
        <set name="roles" table="user_roles" cascade="save-update" 
             fetch="lazy">
            <key column="user_id"/>
            <many-to-many class="Role" column="role_id"/>
        </set>
        
        <!-- Component mapping -->
        <component name="address" class="Address">
            <property name="street" column="street" type="string" length="100"/>
            <property name="city" column="city" type="string" length="50"/>
            <property name="state" column="state" type="string" length="20"/>
            <property name="zipCode" column="zip_code" type="string" length="10"/>
            <property name="country" column="country" type="string" length="50"/>
        </component>
        
    </class>
    
    <!-- Subclass example -->
    <subclass name="AdminUser" extends="User" discriminator-value="ADMIN">
        <property name="adminLevel" column="admin_level" type="int"/>
        <property name="permissions" column="permissions" type="text"/>
    </subclass>
    
    <!-- Named query -->
    <query name="findUserByUsername">
        <![CDATA[
            FROM User u WHERE u.username = :username AND u.isActive = true
        ]]>
    </query>
    
    <!-- Native SQL query -->
    <sql-query name="findUserStats">
        <return alias="user" class="User"/>
        <![CDATA[
            SELECT u.*, COUNT(o.id) as order_count 
            FROM users u 
            LEFT JOIN user_orders o ON u.user_id = o.user_id 
            WHERE u.is_active = true 
            GROUP BY u.user_id
        ]]>
    </sql-query>
    
</hibernate-mapping>